

def create_table(connection_id):

    ddl = """
        drop table if exists PODROOT;
        CREATE TABLE PODROOT (
        purchase_order_number	            integer,		
        div_update_div_code	                integer,		
        div_update_po_approval_ind	        char(1),		
        div_update_po_approval_date	        date,		
        div_update_po_modified_ind	        char(1),		
        div_update_po_modified_date	        date,		
        div_update_po_cancel_ind	        char(1),		
        div_update_po_cancel_date	        date,		
        div_update_po_void_ind	            char(1),		
        div_update_station_mnem_code	    varchar(5),		
        reg_update_reg_code	                integer,		
        reg_update_po_approval_ind	        char(1),		
        reg_update_po_approval_date	        date,		
        reg_update_po_modified_ind	        char(1),		
        reg_update_po_modified_date	        date,		
        reg_update_po_cancel_ind	        char(1),		
        reg_update_po_cancel_date	        date,		
        reg_update_po_void_ind	            char(1),		
        reg_update_station_mnem_code	    char(5),		
        megazone_update_megazone_code	    integer,		
        megazone_update_po_approval_ind	    char(1),		
        megazone_update_po_approval_date	date,		
        megazone_update_po_modified_ind	    char(1),		
        megazone_update_po_modified_date	date,		
        megazone_update_po_cancel_ind	    char(1),	
        megazone_update_po_cancel_date	    date,		
        megazone_update_po_void_ind	        char(1),		
        megazone_update_station_mnem_code	varchar(5),		
        flt_owner_update_flt_owner_code	    integer,		
        flt_owner_update_po_approval_ind	char(1),		
        flt_owner_update_po_approval_date	date,		
        flt_owner_update_po_modified_ind	char(1),		
        flt_owner_update_po_modified_date	date,		
        flt_owner_update_po_cancel_ind	    char(1),		
        flt_owner_update_po_cancel_date	    date,	
        flt_owner_update_po_void_ind	    char(1),		
        flt_owner_update_station_mnem_code	varchar(5),		
        vehicle_cost_amount	                numeric(11,2),		
        deal_code	                        char(8),
        veh_pvt_dealer_code	                varchar(8),
        po_order_year	                    integer,	
        vehicle_make_code	                varchar(8),	
        vehicle_model_code	                varchar(8),		
        vehicle_body_code	                varchar(8),				
        veh_option_info                     jsonb,
        vehicle_package_code_info           jsonb,
        po_ext_int_top_code_info            jsonb,
        veh_contract_code	                varchar(2),
        veh_contract_cycle_code	            varchar(2),
        veh_lease_term_number	            integer,	
        make_mod_vin_code	                varchar(8),
        po_initiator_id_code	            varchar(8),
        vehicles_invoiced_number	        integer,	
        vehicles_received_number	        integer,	
        total_vehicles_ordered	            integer,	
        po_order_date	                    date,		
        po_deliver_by_date	                date,		
        po_deliver_date	                    date,	
        po_purchase_type	                varchar(2),
        po_dup_ind	                        varchar(1),
        total_options_number	            integer,
        bill_to_location_number	            integer,		
        delivery_to_location_number	        integer,		
        transfer_to_location_number	        integer,	
        po_valid_ind	                    varchar(1),
        po_delivering_dealer_code	        varchar(8),	
        deliver_to_city_name	            varchar(10),	
        veh_pvt_ind	                        varchar(2),	
        manu_class_code	                    varchar(2),
        po_trans_status_ind	                varchar(1),	
        mfr_del_to_loc_code	                varchar(8),
        fin_cancelled_count	                integer,
        mso_process_count	                integer,	
        fon_last_update_date	            date,		
        item_num_stat_ind_info              jsonb,
        acks_received_count	                integer,	
        transmitted_date	                date,		
        transmitted_time	                time,	
        priority_lead_time	                integer,	
        quick_spec_code_manufacturer_cd	    varchar(8),	
        quick_spec_code_body_suffix_code	varchar(8),
        finance_allowance_info              jsonb,
        mfr_dealer_code	                    varchar(8),
        pvt_active_ind	                    char(1),		
        engine_info_manufacturer_code	    varchar(8),	
        engine_info_body_suffix_code	    varchar(8),		
        tire_info_manufacturer_code	        varchar(8),		
        tire_info_body_suffix_code	        varchar(8),		
        last_trans_type_code	            varchar(2),		
        non_standard_priority_ind	        char(1),		
        week_priority_ind	                integer,
        month_priority_ind	                varchar(2),		
        country_code	                    char(2),		
        po_depreciation_amt	                numeric(11,2),		
        po_depreciation_rate	            numeric(6,5),		
        po_buyback_code	                    varchar(3),		
        retail_vehicle_cost_amount	        numeric(11,2),		
        gm_standard_prod_week_no	        integer,		
        monday_build_week_no	            integer,		
        vehicle_type_code	                char(1),	
        dealer_zone_code	                varchar(2),		
        intl_plate_cost_pu_amt	            numeric(11,2),
        intl_age_number	                    integer,			
        emission_code	                    varchar(3),		
        edit_override	                    varchar(3),		
        year_priority_ind	                integer,	
        po_disposal_date	                date,			
        california_emissions_ind	        char(1),	
        service_vehicle_ind	                char(1),		
        use_code_modify_date	            date,		
        vehicle_body_style_code	            varchar(3),		
        wizard_color_code	                varchar(3),		
        disposal_term_number	            integer,		
        gm_ord_thru_bus_assoc_cd	        varchar(11),	
        gm_ord_thru_bus_func_cd	            varchar(5),		
        gm_deal_bus_assoc_cd	            varchar(11),	
        gm_deal_bus_func_cd	                varchar(5),	
        gm_del_to_loc_bus_assoc_cd	        varchar(11),		
        gm_del_to_loc_bus_func_cd	        varchar(5),		
        prim_targ_prod_date	                date,			
        sec_targ_prod_date	                date,			
        orig_trans_date	                    date,		
        orig_trans_time                 	time,		
        po_rtrans_ind	                    char(1),
        create_dtti                         timestamp,
        last_update_dtti                    timestamp,
        PRIMARY KEY (purchase_order_number)
        );

"""



    cursor = connection_id.cursor()
    cursor.execute(ddl)
    connection_id.commit()


def insert_data(connection_id, *purchase_order_data):

    table_name = 'podroot'
    insert_query = """

        insert into %s values(
        
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s, %%s, 
        %%s, %%s, %%s)

                    """ %table_name
    
    cursor = connection_id.cursor()
    cursor.execute(insert_query, *purchase_order_data)
    connection_id.commit()

